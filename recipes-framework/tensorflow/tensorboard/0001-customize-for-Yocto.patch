From 30c3d17327b7b66e082dbb443c9e528bf7aa6ac4 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Mon, 14 Dec 2020 15:14:25 +0800
Subject: [PATCH] customize for Yocto

- Remove virtualenv/pip/bdist_wheel calling which Yocto does not support

- Add Yocto toolchain to support cross compiling

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 WORKSPACE                                    |  6 +++
 tensorboard/pip_package/build_pip_package.sh | 57 ++------------------
 third_party/workspace.bzl                    |  8 +++
 3 files changed, 17 insertions(+), 54 deletions(-)

diff --git a/WORKSPACE b/WORKSPACE
index 86f5feaa..8056cfff 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -1,5 +1,11 @@
 workspace(name = "org_tensorflow_tensorboard")
 
+new_local_repository(
+    name = "yocto_compiler",
+    path = "%%WORKDIR%%",
+    build_file = "BUILD.yocto_compiler",
+)
+
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 
 http_archive(
diff --git a/tensorboard/pip_package/build_pip_package.sh b/tensorboard/pip_package/build_pip_package.sh
index ef8df010..085ea608 100755
--- a/tensorboard/pip_package/build_pip_package.sh
+++ b/tensorboard/pip_package/build_pip_package.sh
@@ -12,7 +12,7 @@
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
-
+set -x
 usage() {
   cat <<EOF
 usage: build_pip_package OUTPUT_DIR
@@ -28,12 +28,6 @@ EOF
 }
 
 main() {
-  if [ $# -ne 1 ]; then
-    usage 2>&1
-    return 1
-  fi
-  output="$1"
-
   if [ -z "${RUNFILES+set}" ]; then
     RUNFILES="$(CDPATH="" cd -- "$0.runfiles" && pwd)"
   fi
@@ -41,16 +35,12 @@ main() {
   if [ "$(uname)" = "Darwin" ]; then
     workdir="$(mktemp -d -t tensorboard-pip)"
   else
-    workdir="$(mktemp -d -p /tmp -t tensorboard-pip.XXXXXXXXXX)"
+    workdir="${DESTDIR}"
+    rm -rf ${workdir} && mkdir -p ${workdir}
   fi
   original_wd="${PWD}"
   cd "${workdir}" || return 2
 
-  cleanup() {
-    rm -r "${workdir}"
-  }
-  trap cleanup EXIT
-
   log_file="${workdir}/log"
   build >"${log_file}" 2>&1
   exit_code=$?
@@ -68,20 +58,12 @@ build() (
     sedi="sed -i"
   fi
 
-  command -v virtualenv >/dev/null
   [ -d "${RUNFILES}" ]
 
   cp -LR "${RUNFILES}/org_tensorflow_tensorboard/tensorboard" .
-  mv -f "tensorboard/pip_package/LICENSE" .
-  mv -f "tensorboard/pip_package/MANIFEST.in" .
-  mv -f "tensorboard/pip_package/README.rst" .
-  mv -f "tensorboard/pip_package/requirements.txt" .
-  mv -f "tensorboard/pip_package/setup.cfg" .
-  mv -f "tensorboard/pip_package/setup.py" .
   rm -rf "tensorboard/pip_package"
 
   rm -f tensorboard/tensorboard  # bazel py_binary sh wrapper
-  chmod -x LICENSE  # bazel symlinks confuse cp
   find . -name __init__.py -exec chmod -x {} +  # which goes for all genfiles
 
   mkdir -p tensorboard/_vendor
@@ -100,39 +82,6 @@ build() (
       s/^import webencodings$/from tensorboard._vendor import webencodings/
       s/^from webencodings/from tensorboard._vendor.webencodings/
     ' {} +
-
-  virtualenv -q -p python3 venv
-  export VIRTUAL_ENV=venv
-  export PATH="${PWD}/venv/bin:${PATH}"
-  unset PYTHON_HOME
-
-  # Require wheel for bdist_wheel command, and setuptools 36.2.0+ so that
-  # env markers are handled (https://github.com/pypa/setuptools/pull/1081)
-  export PYTHONWARNINGS=ignore:DEPRECATION  # suppress Python 2.7 deprecation spam
-  pip install -qU wheel 'setuptools>=36.2.0'
-
-  # Overrides file timestamps in the zip archive to make the build
-  # reproducible. (Date is mostly arbitrary, but must be past 1980 to be
-  # representable in a zip archive.)
-  export SOURCE_DATE_EPOCH=1577836800  # 2020-01-01T00:00:00Z
-
-  python setup.py bdist_wheel --python-tag py3 >/dev/null
-
-  cd "${original_wd}"  # Bazel gives "${output}" as a relative path >_>
-  case "${output}" in
-    *.tar.gz)
-      mkdir -p "$(dirname "${output}")"
-      "${RUNFILES}/org_tensorflow_tensorboard/tensorboard/pip_package/deterministic_tar_gz" \
-          "${output}" "${workdir}"/dist/*.whl
-      ;;
-    *)
-      if ! [ -d "${output}" ]; then
-        printf >&2 'fatal: no such output directory: %s\n' "${output}"
-        return 1
-      fi
-      mv "${workdir}"/dist/*.whl "${output}"
-      ;;
-  esac
 )
 
 main "$@"
diff --git a/third_party/workspace.bzl b/third_party/workspace.bzl
index e6a5183f..9260a8ab 100644
--- a/third_party/workspace.bzl
+++ b/third_party/workspace.bzl
@@ -25,6 +25,7 @@ load("//third_party:python.bzl", "tensorboard_python_workspace")
 load("//third_party:js.bzl", "tensorboard_js_workspace")
 load("//third_party:rust.bzl", "tensorboard_rust_workspace")
 load("//third_party:typings.bzl", "tensorboard_typings_workspace")
+load("//third_party/toolchains/yocto:yocto_compiler_configure.bzl", "yocto_compiler_configure")
 
 def tensorboard_workspace(name = ""):
     """Add repositories needed to build TensorBoard.
@@ -39,6 +40,13 @@ def tensorboard_workspace(name = ""):
     tensorboard_js_workspace()
     tensorboard_rust_workspace()
 
+    # Point //external/local_config_yocto_compiler to //external/yocto_compiler
+    yocto_compiler_configure(
+        name = "local_config_yocto_compiler",
+        build_file = str(Label("//third_party/toolchains/yocto:BUILD")),
+        remote_config_repo = "../yocto_compiler",
+    )
+
     # Set up TypeScript toolchain.
     ts_setup_workspace()
 
-- 
2.18.2

