meta-tensorflow
-----------

Introduction
-----------
TensorFlow is an open source software library for high performance numerical
computation primarily used in machine learning. Its flexible architecture
allows easy deployment of computation across a variety of types of platforms
(CPUs, GPUs, TPUs), and a range of systems from single desktops to clusters
of servers to mobile and edge devices.
(https://www.tensorflow.org/)

The build system of TensorFlow is Bazel (https://bazel.build/).

This layer integrates TensorFlow to OE/Yocto platform
- Integrate Google's bazel to Yocto
- Add Yocto toolchain for bazel to support cross compiling.
- Replace python package system(pip/wheel) with Yocto package system(rpm/deb/ipk).

Dependencies
------------
URI: git://github.com/openembedded/openembedded-core.git
branch: master
revision: HEAD

URI: git://github.com/openembedded/bitbake.git
branch: master
revision: HEAD

URI: git://github.com/openembedded/meta-openembedded.git
layers: meta-python, meta-oe
branch: master
revision: HEAD

Limitation
-----------
- Bazel build takes lots of time, since it like bitbake which has own rules and builds
  everything from scratch. Currently bazel could not reuse Yocto DEPENDS/RDEPENDS.

- In order to run tensorflow cases in a reasonable time, although it builds
  successfully on qemuarm, qemuarm64, qemumips, qemumips64, qemux86 and qemux86-64,
  only qemux86-64 with kvm for runtime test.

- It failed to use pre-build model to do predict/inference on big-endian platform
  (such as qemumips), since upstream does not support big-endian very well
  https://github.com/tensorflow/tensorflow/issues/16364

- Do not support 32-bit powerpc (qemuppc) since BoringSSL does not support it.
  (BoringSSL is a fork of OpenSSL used to implement cryptography and TLS across
  most of Google's products)

- If host is not x86_64, please add meta-java to BBLAYERS in conf/bblayers.conf
  (git://git.yoctoproject.org/meta-java)

Future plan
-----------
- Support offline build which bazel build system fetches archive tarballs
  from Yocto download mirror.

- Introduce more machine learning cases to meta-tensorflow.

- Recipe maintenance and upgrade

License
-------

All metadata is MIT licensed unless otherwise stated. Source code included
in tree for individual recipes is under the LICENSE stated in each recipe
(.bb file) unless otherwise stated.

Attribution
-----------
TensorFlow, the TensorFlow logo and any related marks are trademarks of Google Inc.
